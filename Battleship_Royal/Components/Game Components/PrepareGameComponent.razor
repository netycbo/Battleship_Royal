@inject ICustomHttpClientFactory Http


<EditForm Model="@Request" OnValidSubmit="HandleValidSubmit" formName="preparteGame" >
    <DataAnnotationsValidator/>
    <DataAnnotationsValidator/>

    <div class="form-group">
        <label for=" player1">Player 1</label>
        <InputText class="form-control" id="player1" name="player1" @bind-Value="@Request.Player1" />
    </div>

    <div class="form-group">
        <label for=" player2">Player 2</label>
        <InputText class="form-control" id="player2" name="player2" @bind-Value="@Request.Player2" />
    </div>

    <div class="form-group">
        <label for="IsSpeedGame">IsSpeedGame</label>
        <InputCheckbox class="form-control" id="IsSpeedGame" name="IsSpeedGame" @bind-Value="@Request.IsSpeedGame" />
    </div>

    <div class="form-control">
        <label for="timer">Timer</label>
        <InputNumber class="form-control" id="timer" name="timer" @bind-Value="@Request.Timer" />
    </div>

</EditForm>


@code {
        [SupplyParameterFromForm]
        public PrepareGameRequest Request { get; set; } = new PrepareGameRequest();
        [Parameter]
        public PrepareGameResponse Response { get; set; }

        public async Task HandleValidSubmit()
        {
            var client = Http.CreateClient("prepare-game");
            var response = await client.PostAsJsonAsync("prepare-game", Request);
            if (response.IsSuccessStatusCode)
            {
                Response = await response.Content.ReadFromJsonAsync<PrepareGameResponse>();
            }
        }

}
